Cat.java:
--------
public class Cat implements Comparable<Cat> {
    private String name;
    private String song;
    // status is how important the cat is
    // in the hierarchy of cats
    private int status;
    private static int songCount;
    
    //default constructor
    public Cat (){
        name = ""; 
        song = "";
        status = 0; 
    }
    
    // specific constructor
    public Cat (String name, String song, int status){
        this.name = name; 
        this.song = song;
        this.status = status; 
    }
    
    // setter
    public void setName(String name){
        this.name = name; 
    }
    
    public void setSong(String song){
        this.song = song; 
    }
    
    public void playFiddle(){
        songCount ++;
    }
    
    // two cats are equal if their status is equal
    public int compareTo(Cat a){
        int trueFalse = 0;  
        if (status == a.status){
            trueFalse = 1;  
        }
        else if (status != a.status){
            trueFalse = 0; 
        }
        return trueFalse;  
    }
    
    // comparing the status variable.
    public boolean equals(Cat a){
        boolean trueFalse = false;  
        if (status == a.status){
            trueFalse = true;  
        }
        else if (status != a.status){
            trueFalse = false; 
        }
        return trueFalse; 
    }
    
    public static int getCount(){
        return songCount;
        
    }
    public String toString (){
        return name;
    }
}

Cow.java:
--------
public class Cow implements Comparable <Cow>{
    private String name;
    private int jumpHeight;
    private int jumpCount;
    
    //default constructor
    public Cow (){
        name = "";
        jumpHeight = 0; 
        jumpCount = 0; 
    }
    
    // specific constructor
    public Cow (String name, int jumpHeight){
        this.name = name; 
        this.jumpHeight = jumpHeight; 
    }
    
    // setter
    public void setName(String name){
        this.name = name; 
    }
    
    public void setHeight(int height){
        jumpHeight = height;  
    }
    
    public void jumpTheMoon(){
        jumpCount++;
    }
    
    // two cows are equal if their height is equal
    public int compareTo(Cow a){
        int trueFalse = 0;  
        if (jumpHeight == a.jumpHeight){
            trueFalse = 1;  
        }
        else if (jumpHeight != a.jumpHeight){
            trueFalse = 0; 
        }
        return trueFalse; 
    }
    
    // comparing the height variable.
    public boolean equals(Cow a){
        boolean trueFalse = false;  
        if (jumpHeight == a.jumpHeight){
            trueFalse = true;  
        }
        else if (jumpHeight != a.jumpHeight){
            trueFalse = false; 
        }
        return trueFalse;  
    }
    
    public int getCount(){
        return jumpCount;
    }
    public String toString (){
        return name;
    }
}

DishSpoonRunner.java:
--------------------
public class DishSpoonRunner
{
    public static void main(String[] args)
    {
        Cat cat1 = new Cat ("Philip", "Bach's Tocata and Fugue in D minor", 10);
        Cat cat2 = new Cat ("Sam", "Rolling Stones Paint it Black", 7);
            cat1.playFiddle();
            cat2.playFiddle();
        Cow cow1 = new Cow ("Rudolph", 10);
        Cow cow2 = new Cow ("Dasher", 13);
        
        System.out.println("1. " + cat1);
        System.out.println("2. " + cat2);
        System.out.println("3. " + cat1.compareTo(cat2));
        System.out.println("4. " + cat2.equals(cat1));
        System.out.println("5. " + Cat.getCount());
        
        
        System.out.println("6. " + cow1);
        System.out.println("7. " + cow2);
        cow1.jumpTheMoon();
        cow1.jumpTheMoon();
        System.out.println("8. " + cow1.getCount());
        System.out.println("9. " + cow1.compareTo(cow2));
        System.out.println("10." + cow2.compareTo(cow1));
    }
}

